CXL Library RELEASE HISTORY

----------
1.0.0	6 Jun 2020


*** Changes from ProLib library 2.1.0

 1. Removed 'pl' prefix from headers and moved into new 'include/cxl' subdirectory.
 2. Created "stdos.h" header, which replaced the former "os.h" and "pldef.h" headers, and modified so that it is no longer
    necessary to select an OS in an include file (formerly os.h) in order to compile on multiple platforms.
 3. Created cxlibvers() function, which returns a human-readable version string for the CXL library.
 4. Renamed agraph() function to agraft() in array.c, which was what it was supposed to be called in the first place.
 5. Changed all snake case names to camelCase in source code where possible, and removed "x_" prefixes from struct member names.
    Changes include the following global variables and functions:
		datGarb		-> datGarbHead
		plexcep		-> cxlExcep

		dgarbpop()	-> datGarbPop()
		dnewtrk()	-> dnewtrack()
		dopentrk()	-> dopentrack()
		dsetmemstr()	-> dsetheapstr()
		duntrk()	-> duntrack()
		dviz()		-> dsetvizmem()
		dvizc()		-> dputvizc()
		dvizs()		-> dputvizmem()
		emsge()		-> emsgsys()
		getdel()	-> getDelim()
		getswitch()	-> getSwitch()
 6. Changed getSwitch() function:
	- added a 'switchCount' argument for specifying the size of the switch table, instead of having a dummy switch at the
	  end of the table, as previously.
	- changed so that "++value" can be used (in addition to "--value") to specify a switch argument that begins with a plus
	  sign (+).
 7. Created strip() function in new strip.c source file, which removes leading and/or trailing white space from a string.
 8. Renamed several string-fab-related items in datum.c to clarify that a DStrFab object is not used only for building a
    null-terminated string:
	- renamed DStrFab object to DFab.
	- renamed all "SF*" flags to "Fab*".
    Now it is more obvious that a DFab object can be used to build either a null-terminated string or a DBlob object.
 9. Moved fvizc() and fvizs() functions from viz.c to new source file, fviz.c, and renamed the latter function to fvizmem().
10. Added 'const' qualifier to selected library function arguments and dependent local variables where appropriate.
